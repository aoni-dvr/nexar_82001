#!/bin/sh
# Generates a small Makefile used in the root of the output
# directory, to allow make to be started from there.
# The Makefile also allow for more convinient build of external modules

# Usage
# $1 - KERNEL_MODULE
# $2 - AMBA_CAMERA Output directory
# $3 - AMBA_CAMERA_KMODULE_OPTS
# $4 - AMBA_CAMERA source directory


test ! -r $2/kmod.mk -o -O $2/kmod.mk || exit 0
# Only overwrite automatically generated Makefiles
# (so we do not overwrite kernel Makefile)
if test -e $2/kmod.mk && ! grep -q Automatically $2/kmod.mk
then
	exit 0
fi
if [ "${quiet}" != "silent_" ]; then
	echo "  GEN     $2/kmod.mk"
fi

cat << EOF > $2/kmod.mk
# Automatically generated by $0: don't edit

ifeq ("\$(origin V)", "command line")
VERBOSE := \$(V)
endif
ifneq (\$(VERBOSE),1)
Q := @
endif

export Q

KERNEL_MODULE = $1

AMBA_CAMERA_OUTDIR= $2

AMBA_CAMERA_KMODULE_OPTS = $3

AMBA_CAMERA_SITE = $4

# Reverse attribute of text effect
color_on := \$(shell tput rev)

# Turn off all attributes
color_off := \$(shell tput sgr0)

AMBA_CAMERA_KMODULE_OPTS += --no-print-directory

.PHONY: rsync build install

all: install

install: build
	\$(Q)for m in \$(KERNEL_MODULE); do \\
		echo "\$(color_on)[INSTALL \$\${m} ...]\$(color_off)"; \\
		\$(MAKE) \$(AMBA_CAMERA_KMODULE_OPTS) -C \$(AMBA_CAMERA_OUTDIR)/\$\${m}/build/linux install; \\
	done

build: rsync
	\$(Q)for m in \$(KERNEL_MODULE); do \\
		echo "\$(color_on)[BUILD \$\${m} ...]\$(color_off)"; \\
		\$(MAKE) \$(AMBA_CAMERA_KMODULE_OPTS) -C \$(AMBA_CAMERA_OUTDIR)/\$\${m}/build/linux; \\
	done

rsync:
	\$(Q)for m in \$(KERNEL_MODULE); do \\
		echo "\$(color_on)[RSYNC \$\${m} ...]\$(color_off)"; \\
		mkdir -p \$(AMBA_CAMERA_OUTDIR)/\$\${m}; \\
		rsync -au --chmod=u=rwX,go=rX \$(AMBA_CAMERA_SITE)/\$\${m} \$(AMBA_CAMERA_OUTDIR)/\$\${m}/..; \\
	done

clean:
	\$(Q)for m in \$(KERNEL_MODULE); do \\
		echo "\$(color_on)[CLEAN \$\${m} ...]\$(color_off)"; \\
		\$(MAKE) \$(AMBA_CAMERA_KMODULE_OPTS) -C \$(AMBA_CAMERA_OUTDIR)/\$\${m}/build/linux clean; \\
	done

EOF
