#############################################################
#
# supercam
#
#############################################################

pkg			= SUPERCAM

$(pkg)_VERSION		= 1.0
$(pkg)_SITE_METHOD	= local
$(pkg)_SITE		= $(AMBARELLA_PKG_DIR)/supercam
$(pkg)_SOURCE		= supercam-$($(pkg)_VERSION).tar.gz
$(pkg)_DEPENDENCIES	= ambaipc amba_util amba_examples
$(pkg)_INSTALL_STAGING	= NO
$(pkg)_INSTALL_IMAGES	= NO
$(pkg)_INSTALL_TARGET	= YES
$(pkg)_LICENSE		= MIT
$(pkg)_LICENSE_FILES	= License_MIT.txt

export BR2_PACKAGE_SUPERCAM

#Prepre command line for sub packages
ifeq ($(BR2_PACKAGE_SUPERCAM_FRAMESHARE),y)
  INSTALL_SUPERCAM_FRAMESHARE = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_FrameShare -f br.mk DESTDIR=$(TARGET_DIR) install
  BUILD_SUPERCAM_FRAMESHARE =  $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_FrameShare -f br.mk
  CLEAN_SUPERCAM_FRAMESHARE = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_FrameShare -f br.mk clean
else
  INSTALL_SUPERCAM_FRAMESHARE =
  BUILD_SUPERCAM_FRAMESHARE =
  CLEAN_SUPERCAM_FRAMESHARE =
endif

ifeq ($(BR2_PACKAGE_SUPERCAM_METADATA),y)
  INSTALL_SUPERCAM_METADATA = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_MetaData -f br.mk DESTDIR=$(TARGET_DIR) install
  BUILD_SUPERCAM_METADATA =  $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_MetaData -f br.mk
  CLEAN_SUPERCAM_METADATA = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_MetaData -f br.mk clean
else
  INSTALL_SUPERCAM_METADATA =
  BUILD_SUPERCAM_METADATA =
  CLEAN_SUPERCAM_METADATA =
endif

ifeq ($(BR2_PACKAGE_SUPERCAM_RTSPFRAMESHARE),y)
  INSTALL_SUPERCAM_RTSPFRAMESHARE = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_RtspFrameShare -f br.mk DESTDIR=$(TARGET_DIR) install
  BUILD_SUPERCAM_RTSPFRAMESHARE =  $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_RtspFrameShare -f br.mk
  CLEAN_SUPERCAM_RTSPFRAMESHARE = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_RtspFrameShare -f br.mk clean
else
  INSTALL_SUPERCAM_RTSPFRAMESHARE =
  BUILD_SUPERCAM_RTSPFRAMESHARE =
  CLEAN_SUPERCAM_RTSPFRAMESHARE =
endif

ifeq ($(BR2_PACKAGE_SUPERCAM_STATUSUPDATE),y)
  INSTALL_SUPERCAM_STATUSUPDATE = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_StatusUpdate -f br.mk DESTDIR=$(TARGET_DIR) install
ifeq ($(BR2_PACKAGE_SUPERCAM_S),y)
  BUILD_SUPERCAM_STATUSUPDATE =  $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_StatusUpdate -f br.mk BR2_PACKAGE_SUPERCAM_S=y
else
  BUILD_SUPERCAM_STATUSUPDATE =  $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_StatusUpdate -f br.mk
endif
  CLEAN_SUPERCAM_STATUSUPDATE = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_StatusUpdate -f br.mk clean
else
  INSTALL_SUPERCAM_STATUSUPDATE =
  BUILD_SUPERCAM_STATUSUPDATE =
  CLEAN_SUPERCAM_STATUSUPDATE =
endif

ifeq ($(BR2_PACKAGE_SUPERCAM_PREVMETADATA),y)
  INSTALL_SUPERCAM_PREVMETADATA = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_PrevMetaData -f br.mk DESTDIR=$(TARGET_DIR) install
  BUILD_SUPERCAM_PREVMETADATA =  $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_PrevMetaData -f br.mk
  CLEAN_SUPERCAM_PREVMETADATA = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_PrevMetaData -f br.mk clean
else
  INSTALL_SUPERCAM_PREVMETADATA =
  BUILD_SUPERCAM_PREVMETADATA =
  CLEAN_SUPERCAM_PREVMETADATA =
endif

ifeq ($(BR2_PACKAGE_SUPERCAM_LOGTHREADX),y)
  INSTALL_SUPERCAM_LOGTHREADX = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_LogThreadX -f br.mk DESTDIR=$(TARGET_DIR) install
  BUILD_SUPERCAM_LOGTHREADX =  $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_LogThreadX -f br.mk
  CLEAN_SUPERCAM_LOGTHREADX = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_LogThreadX -f br.mk clean
else
  INSTALL_SUPERCAM_LOGTHREADX =
  BUILD_SUPERCAM_LOGTHREADX =
  CLEAN_SUPERCAM_LOGTHREADX =
endif

ifeq ($(BR2_PACKAGE_SUPERCAM_TCPSERVER),y)
  INSTALL_SUPERCAM_TCPSERVER = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_TCPServer -f br.mk DESTDIR=$(TARGET_DIR) install
  BUILD_SUPERCAM_TCPSERVER =  $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_TCPServer -f br.mk
  CLEAN_SUPERCAM_TCPSERVER = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/Example_TCPServer -f br.mk clean
else
  INSTALL_SUPERCAM_TCPSERVER =
  BUILD_SUPERCAM_TCPSERVER =
  CLEAN_SUPERCAM_TCPSERVER =
endif

ifeq ($(BR2_PACKAGE_SUPERCAM_LIB_SHM),y)
  STAGING_SUPERCAM_LIB_SHM = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libambashm -f br.mk DESTDIR=$(STAGING_DIR) lib_install
  INSTALL_SUPERCAM_LIB_SHM = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libambashm -f br.mk DESTDIR=$(TARGET_DIR) install
  BUILD_SUPERCAM_LIB_SHM = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libambashm -f br.mk
  CLEAN_SUPERCAM_LIB_SHM = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libambashm -f br.mk clean
  UNINSTALL_STAGING_LIB_SHM =   $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libambashm -f br.mk DESTDIR=$(STAGING_DIR) lib_uninstall
else
  STAGING_SUPERCAM_LIB_SHM =
  INSTALL_SUPERCAM_LIB_SHM =
  BUILD_SUPERCAM_LIB_SHM =
  CLEAN_SUPERCAM_LIB_SHM =
  UNINSTALL_STAGING_LIB_SHM =
endif

ifeq ($(BR2_PACKAGE_SUPERCAM_LIB_TCP),y)
  STAGING_SUPERCAM_LIB_TCP = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libambatcp -f br.mk DESTDIR=$(STAGING_DIR) lib_install
  INSTALL_SUPERCAM_LIB_TCP = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libambatcp -f br.mk DESTDIR=$(TARGET_DIR) install
  BUILD_SUPERCAM_LIB_TCP = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libambatcp -f br.mk
  CLEAN_SUPERCAM_LIB_TCP = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libambatcp -f br.mk clean
  UNINSTALL_STAGING_LIB_TCP = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libambatcp -f br.mk DESTDIR=$(STAGING_DIR) lib_uninstall
else
  STAGING_SUPERCAM_LIB_TCP =
  INSTALL_SUPERCAM_LIB_TCP =
  BUILD_SUPERCAM_LIB_TCP =
  CLEAN_SUPERCAM_LIB_TCP =
  UNINSTALL_STAGING_LIB_TCP =
endif

ifeq (y,y)
  STAGING_SUPERCAM_LIB_CAMCTRL = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libcamctrl -f br.mk DESTDIR=$(STAGING_DIR) lib_install
  INSTALL_SUPERCAM_LIB_CAMCTRL = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libcamctrl -f br.mk DESTDIR=$(TARGET_DIR) install
  BUILD_SUPERCAM_LIB_CAMCTRL = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libcamctrl -f br.mk
  CLEAN_SUPERCAM_LIB_CAMCTRL = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libcamctrl -f br.mk clean
  UNINSTALL_STAGING_LIB_CAMCTRL = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/UTIL_LIB/libcamctrl -f br.mk DESTDIR=$(STAGING_DIR) lib_uninstall
else
  STAGING_SUPERCAM_LIB_CAMCTRL =
  INSTALL_SUPERCAM_LIB_CAMCTRL =
  BUILD_SUPERCAM_LIB_CAMCTRL =
  CLEAN_SUPERCAM_LIB_CAMCTRL =
  UNINSTALL_STAGING_LIB_CAMCTRL =
endif

#supercam common folder
STAGING_SUPERCAM_COMMON = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/common -f br.mk DESTDIR=$(STAGING_DIR) lib_install
INSTALL_SUPERCAM_COMMON = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/common -f br.mk DESTDIR=$(TARGET_DIR) install
BUILD_SUPERCAM_COMMON =  $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/common -f br.mk
CLEAN_SUPERCAM_COMMON = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/common -f br.mk clean
UNINSTALL_STAGING_COMMON = $(TARGET_CONFIGURE_OPTS) $(TARGET_MAKE_ENV) $(MAKE) -C $(@D)/common -f br.mk DESTDIR=$(STAGING_DIR) lib_uninstall

#BuildRoot macro
define SUPERCAM_INSTALL_TARGET_CMDS
  $(INSTALL_SUPERCAM_FRAMESHARE)
  $(INSTALL_SUPERCAM_METADATA)
  $(INSTALL_SUPERCAM_RTSPFRAMESHARE)
  $(INSTALL_SUPERCAM_STATUSUPDATE)
  $(INSTALL_SUPERCAM_GETFWIMAGE)
  $(INSTALL_SUPERCAM_PREVMETADATA)
  $(INSTALL_SUPERCAM_LOGTHREADX)
  $(INSTALL_SUPERCAM_TCPSERVER)
endef

define SUPERCAM_BUILD_CMDS
  $(BUILD_SUPERCAM_COMMON)
  $(INSTALL_SUPERCAM_COMMON)
  $(STAGING_SUPERCAM_COMMON)
  $(BUILD_SUPERCAM_LIB_SHM)
  $(INSTALL_SUPERCAM_LIB_SHM)
  $(STAGING_SUPERCAM_LIB_SHM)
  $(BUILD_SUPERCAM_LIB_TCP)
  $(INSTALL_SUPERCAM_LIB_TCP)
  $(STAGING_SUPERCAM_LIB_TCP)
  $(BUILD_SUPERCAM_LIB_CAMCTRL)
  $(INSTALL_SUPERCAM_LIB_CAMCTRL)
  $(STAGING_SUPERCAM_LIB_CAMCTRL)
  $(BUILD_SUPERCAM_FRAMESHARE)
  $(BUILD_SUPERCAM_METADATA)
  $(BUILD_SUPERCAM_RTSPFRAMESHARE)
  $(BUILD_SUPERCAM_STATUSUPDATE)
  $(BUILD_SUPERCAM_GETFWIMAGE)
  $(BUILD_SUPERCAM_PREVMETADATA)
  $(BUILD_SUPERCAM_LOGTHREADX)
  $(BUILD_SUPERCAM_TCPSERVER)
endef

define SUPERCAM_CLEAN_CMDS
  $(CLEAN_SUPERCAM_LIB_TCP)
  $(UNINSTALL_STAGING_LIB_TCP)
  $(CLEAN_SUPERCAM_LIB_CAMCTRL)
  $(UNINSTALL_STAGING_LIB_CAMCTRL)
  $(CLEAN_SUPERCAM_FRAMESHARE)
  $(CLEAN_SUPERCAM_METADATA)
  $(CLEAN_SUPERCAM_RTSPFRAMESHARE)
  $(CLEAN_SUPERCAM_STATUSUPDATE)
  $(CLEAN_SUPERCAM_GETFWIMAGE)
  $(CLEAN_SUPERCAM_PREVMETADATA)
  $(CLEAN_SUPERCAM_LOGTHREADX)
  $(CLEAN_SUPERCAM_TCPSERVER)
  $(CLEAN_SUPERCAM_COMMON)
  $(UNINSTALL_STAGING_COMMON)
endef

define SUPERCAM_POST_LEGAL_INFO_HOOKS_CMD
	@$(foreach F,$($(PKG)_LICENSE_FILES),$(call legal-license-file,$$($(PKG)_RAWNAME),$(F),$$($(PKG)_DIR)/$(F))$$(sep))
endef
SUPERCAM_POST_LEGAL_INFO_HOOKS += SUPERCAM_POST_LEGAL_INFO_HOOKS_CMD

$(eval $(generic-package))
