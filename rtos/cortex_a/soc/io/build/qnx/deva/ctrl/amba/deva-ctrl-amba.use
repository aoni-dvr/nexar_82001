%C - Sound driver for Ambarella CV SOC family

This is a DLL of the io-audio system.

command:
    io-audio -d rcar [tx_ssi=val][,rx_ssi=val][,tx_use_src=val][,...]

Driver Options:
        tx_ssi                : string of one to four digits indicating the SSI ports used for transmit
        rx_ssi                : indicates the SSI port used for receive
        voices                : indicates number of voices used
        clk_mode  "master"    : one of the SSI ports indicated by tx_ssi and rx_ssi is configured as master
                  "slave"     : all SSI ports indicated by tx_ssi and rx_ssi are configured as slave
        sync_start            : Synchronize start of SSI ports 3,4
        op_mode               : Indicates a special TDM mode to be used
                "tdm_ext"     - TDM extended mode is used
                "tdm_split"   - TDM split mode is used
                "tdm_exsplit" - TDM exsplit mode is used
        tx_use_src:         0 : Don't use Sample Rate Conversion (SRC) for playback
                            1 : Use SRC for playback
                                Default value is variant specific
        rx_use_src:         0 : Don't use SRC for capture
                            1 : Use SRC for capture
                                Default value is variant specific
        tx_use_dvc:         0 : Don't use Digital Volume Control (DVC) for playback
                            1 : Use DVC for playback
                                Default value is variant specific
        rx_use_dvc:         0 : Don't use DVC for capture
                            1 : Use DVC for capture
                                Default value is variant specific
        tx_use_mlp:         0 : Don't use MediaLB (MLP) for playback (default)
                            1 : Use MLP for playback
        rx_use_mlp:         0 : Don't use MLP for capture (default)
                            1 : Use MLP for capture
        tx_use_dtcp:        0 : Don't use Digital Transmission Content Protection (DTCP) for playback (default)
                            1 : Use DTCP for playback
        rx_use_dtcp:        0 : Don't use DTCP for capture (default)
                            1 : Use DTCP for capture
        sample_size           : 16, 24 or 32 bits (default is 16)
        clk_pol               : Bit clock polarity
                            0 - data sampled at SCK falling edge
                            1 - data sampled at SCK rising edge (default)
        fsync_pol             : Frame sync (WS) polarity
                            0 - active low (default)
                            1 - active high
        bit_delay             : Delay between frame sync and start of data
                            0 - none
                            1 - 1 cycle (default)
        sample_rate           : range in Hz - min_rate:max_rate (default 8000 - 192000 Hz, the full supported range of Rcar H2/H3)
        sample_rate_list      : list of all supported sample rates in Hz, separated by :
        slot_size             : number of bits in one phase of frame clock, 16 or 32 (default is 32 for Rcar H3, 16 for Rcar H2)
        hdmi_chan             : HDMI channel to use, only applicable to Rcar H3 (0 or 1, default none)
        ver                   : RCAR version string ("h2", "e2", "m2", "h3", etc - default is "h2")
        mclk_1                : MCLK RATE 1 in HZ  (default value from variant.h: MCLK_1)
        mclk_2                : MCLK RATE 2 in HZ  (default value from variant.h: MCLK_2)
        mclk_fs               : Scale of MCLK RATE to sample rate (default value is variant specific)
        mclk_clk_source1      : MCLK source for MCLK RATE 1 (default value from variant.h: MCLK_SOURCE_1)
        mclk_clk_source2      : MCLK source for MCLK RATE 2 (default value from variant.h: MCLK_SOURCE_2)
        debug                 : enable register dumps at the start and end of playback or capture session
Notes:

SRC and DVC are functional blocks of the Sample Rate Conversion Unit (SCU).

Supported sample rate range and SRC: the range 8000-192000 Hz can be always supported with SRC enabled, regardless of analog codec used; with SRC disabled, however, the supported range depends on the analog codec in use, if any. For Rcar-H2/W2H platforms equipped with the AK4643 codec, the supported sample rate range with SRC disabled is 8000-48000 Hz.

io-audio configuration file: If using an Rcar-H2 or Rcar-H3 platform with SDP 7.0 and/or Mainline BSPs, and the platform is equipped with an analog codec, the analog codec DLL must be specified using an io-audio configuration file, and io-audio must get started using "io-audio -c <path-to-io_audio.conf>".

Examples for io-audio command line for cases where no analog codec is used:

   # Start audio driver on SSI 0 for Playback and SSI 1 for capture with src
   io-audio -d rcar tx_ssi=0,rx_ssi=1,voices=2,clk_mode=master,tx_use_src=1,rx_use_src=1

   # Start audio driver on SSI 0,1,2,9 for Playback with src
   io-audio -d rcar tx_ssi=0129,clk_mode=master,tx_use_src=1

   # Start audio driver on SSI 3 for Playback and SSI 4 for capture
   io-audio -d rcar tx_ssi=3,rx_ssi=4,clk_mode=master,sync_start

Examples of [ctrl] section of io_audio.conf file for cases where an analog codec is used, or the io_audio.conf file is used for any other reason; the driver options described above are listed as key-value pairs separated by commas as a value for the "options" key:

   #W2H example:
   [ctrl]
   name=rcar
   options=ver=w2h,tx_ssi=0,rx_ssi=1,rx_use_dvc=0,mclk_1=12288000,mclk_clk_source1=1,mclk_fs=0
   mixer_dll=ak4643                       # Load deva-mixer-ak4643.so
   ak4643_i2c_dev=2                       # /dev/i2c2
   ak4643_i2c_addr=18                     # 0x12
   ak4643_lineout=enable
   ak4643_mic1=enable:single-ended
   ak4643_clock_mode=pll:mcki
   ak4643_mclk_in=12288000
   ak4643_mclk_out_fs=256
   ak4643_debug=enable

   #Rcar-H3 example:
   [ctrl]
   name=rcar
   options=ver=h3,tx_ssi=0,rx_ssi=1,tx_use_src=1,rx_use_src=1,tx_use_dvc=1,rx_use_dvc=0
   mixer_dll=ak4613                       # Load deva-mixer-ak4613.so
   ak4613_i2c_dev=2                       # /dev/i2c2
   ak4613_i2c_addr=16                     # 0x10
   ak4613_out1=enable:differential
   ak4613_in1=enable:single-ended



