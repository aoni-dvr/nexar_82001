# Copyright (c) 2017-2018 Ambarella, Inc.
#
# This file and its contents ("Software") are protected by intellectual
# property rights including, without limitation, U.S. and/or foreign copyrights.
# This Software is also the confidential and proprietary information of
# Ambarella, Inc. and its licensors.  You may not use, reproduce, disclose,
# distribute, modify, or otherwise prepare derivative works of this Software
# or any portion thereof except pursuant to a signed license agreement or
# nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
# In the absence of such an agreement, you agree to promptly notify and
# return this Software to Ambarella, Inc.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

AC_INIT()

if [ test $PROJECT = cv6 ]; then
  has_hsm=1
  add_core_logger=1
else
  has_hsm=0
  add_core_logger=0
fi

test -z "$cv_common_dir" && cv_common_dir=$srcdir/../cv_common
AC_ARG_VAR([cv_common_dir], [Common directory for the CV Project])

test -z "$orc_common_dir" && orc_common_dir=$srcdir/common
AC_ARG_VAR([orc_common_dir], [Common directory for ORC])

test -z "$test_srcdir" && test_srcdir=$srcdir
AC_ARG_VAR([test_srcdir], [test base source directory])

test -z "$amalgam_diag" && amalgam_diag=0
AC_ARG_VAR([amalgam_diag], [Compile for amalgam diags (default = 0)])

test -z "$chide_diag" && chide_diag=0
AC_ARG_VAR([chide_diag], [Compile for CHIDE diags (default = 0)])

test -z "$rtl_diag" && rtl_diag=0
AC_ARG_VAR([rtl_diag], [Compile for RTL diags (default = 0)])

test -z "$use_ace_platform" && use_ace_platform=0
AC_ARG_VAR([use_ace_platform], [Compile for use with the ACE platform (default = 0)])

test -z "$diag_sod_cvtasks" && diag_sod_cvtasks=""
AC_ARG_VAR([diag_sod_cvtasks], [SOD/CVTasks to compile into this diag])

test -z "$diag_vp_cvtasks" && diag_vp_cvtasks=""
AC_ARG_VAR([diag_vp_cvtasks], [VP/CVTasks to compile into this diag])

test -z "$diag_vp_any_cvtasks" && diag_vp_any_cvtasks=""
AC_ARG_VAR([diag_vp_any_cvtasks], [ORCANY/CVTasks to link from OrcAny])

test -z "$diag_sod_any_cvtasks" && diag_sod_any_cvtasks=""
AC_ARG_VAR([diag_sod_any_cvtasks], [ORCANY/CVTasks to link from OrcAny])

test -z "$vp_cvtask_libs" && vp_cvtask_libs=""
AC_ARG_VAR([vp_cvtask_libs], [Compiled VP cvtask libraries to link])

test -z "$sod_cvtask_libs" && sod_cvtask_libs=""
AC_ARG_VAR([sod_cvtask_libs], [Compiled SOD cvtask libraries to link])

test -z "$any_cvtask_libs" && any_cvtask_libs=""
AC_ARG_VAR([any_cvtask_libs], [Compiled ORCANY cvtask libraries to link])

# The following param helps to compile CVTASK code auto generated by superdag_gen_src.py. The
# argument is passed to the auto-generated CVTASK folder. This argument is not verified in
# this file, but verified in folder generated by supderdag_gen script.
# This is only required for superdag_gen v1.
test -z "$orccvtask" && orccvtask=""
AC_ARG_VAR([orccvtask], [Customer CVTASK folder to build])

### Conditionally build "flexidag" mode for Flexidag compilations ##########################################################
test -z "$flexidag_mode" && flexidag_mode=0
AC_ARG_VAR([flexidag_mode], [Compile a collection of CVTasks for a Flexidag.bin])

### Conditionally enable MISRA-compliant mode for ASIL compilations ########################################################
test -z "$misra_compliance_mode" && misra_compliance_mode=0
AC_ARG_VAR([misra_compliance_mode], [Enable misra compliance mode when compiling])

### Conditionally has hsm when compiling ###################################################################################
test -z "$has_hsm" && has_hsm=0
AC_ARG_VAR([has_hsm], [Has Hsm when compiling])

### Conditionally link core cvtasks ########################################################################################
test -z "$add_core_logger" && add_core_logger=0
AC_ARG_VAR([add_core_logger], [Includes core-cvtask logger])

test -z "$add_core_muxer" && add_core_muxer=1
AC_ARG_VAR([add_core_muxer], [Includes core-cvtask muxer])

### Conditionally enable ASIL-compliant mode for ASIL compilations #########################################################
if [ test $PROJECT = cv2a ]; then
  test -z "$asil_compliance_mode" && asil_compliance_mode=1
  AC_ARG_VAR([asil_compliance_mode], [Enable asil compliance mode when compiling])
else
  test -z "$asil_compliance_mode" && asil_compliance_mode=0
  AC_ARG_VAR([asil_compliance_mode], [Enable asil compliance mode when compiling])
fi

test -z "$asil_prototype_mode" && asil_prototype_mode=0
AC_ARG_VAR([asil_prototype_mode], [Enable asil prototype mode when compiling])

### Conditionally build scheduler, if it exists ############################################################################
if [ test -e $srcdir/scheduler/configure.ac ]; then
  if [ test $flexidag_mode != 0 ]; then
    build_scheduler=0
    AC_ARG_VAR([build_scheduler], [Ignoring scheduler build in flexidag mode])
  else
    build_scheduler=1
    AC_ARG_VAR([build_scheduler], [Compile scheduler code - scheduler directory available])
  fi
else
  build_scheduler=0
  AC_ARG_VAR([build_scheduler], [Cannot compile scheduler code - scheduler directory not found])
fi

### Conditionally build default libraries if building scheduler ############################################################

if [ test $flexidag_mode != 0 ]; then
  test -z "$default_sod_cvtasks" && default_sod_cvtasks=" "
  test -z "$sod_default_cvtask_libs" && sod_default_cvtask_libs=" "
  test -z "$default_vp_cvtasks" && default_vp_cvtasks=" "
  test -z "$vp_default_cvtask_libs" && vp_default_cvtask_libs=" "
  test -z "$default_sod_cvlib_libs" && default_sod_cvlib_libs=" "
  test -z "$default_sod_cvlib_srcs" && default_sod_cvlib_srcs=" "
  test -z "$default_vp_cvlib_libs" && default_vp_cvlib_libs=" "
  test -z "$default_vp_cvlib_srcs" && default_vp_cvlib_srcs=" "
else
  if [ test $build_scheduler != 0 ]; then
    test -z "$default_sod_cvtasks" && default_sod_cvtasks=""
    test -z "$sod_default_cvtask_libs" && sod_default_cvtask_libs=""
    if [ test $add_core_logger != 0 ]; then
      test -z "$default_vp_cvtasks" && default_vp_cvtasks=""
      test -z "$vp_default_cvtask_libs" && vp_default_cvtask_libs=""
    else
      test -z "$default_vp_cvtasks" && default_vp_cvtasks="Loggers"
      test -z "$vp_default_cvtask_libs" && vp_default_cvtask_libs=""
    fi
  else
    test -z "$default_sod_cvtasks" && default_sod_cvtasks=""
    test -z "$sod_default_cvtask_libs" && sod_default_cvtask_libs=""
    if [ test $add_core_logger != 0 ]; then
      test -z "$default_vp_cvtasks" && default_vp_cvtasks=""
      test -z "$vp_default_cvtask_libs" && vp_default_cvtask_libs=""
    else
      test -z "$default_vp_cvtasks" && default_vp_cvtasks=""
      test -z "$vp_default_cvtask_libs" && vp_default_cvtask_libs="Loggers"
    fi
  fi
  test -z "$default_sod_cvlib_libs" && default_sod_cvlib_libs=" "
  test -z "$default_sod_cvlib_srcs" && default_sod_cvlib_srcs=" "
  if [ test $has_hsm != 0]; then
    test -z "$default_vp_cvlib_libs" && default_vp_cvlib_libs=" "
    test -z "$default_vp_cvlib_srcs" && default_vp_cvlib_srcs=" "
  else
    test -z "$default_vp_cvlib_libs" && default_vp_cvlib_libs="vissec"
    test -z "$default_vp_cvlib_srcs" && default_vp_cvlib_srcs=" "
  fi
fi

AC_ARG_VAR([default_sod_cvtasks], [Default SOD/CVTasks to compile into the system])
AC_ARG_VAR([sod_default_cvtask_libs], [Compiled SOD cvtask libraries to link in by default])
AC_ARG_VAR([default_vp_cvtasks], [Default VP/CVTasks to compile into the system])
AC_ARG_VAR([vp_default_cvtask_libs], [Compiled VP cvtask libraries to link in by default])
AC_ARG_VAR([default_sod_cvlib_libs], [SOD/CVLIB libraries to link in by default])
AC_ARG_VAR([default_sod_cvlib_srcs], [SOD/CVLIB libraries to compile from source])
AC_ARG_VAR([default_vp_cvlib_libs], [VP/CVLIB libraries to link in by default])
AC_ARG_VAR([default_vp_cvlib_srcs], [VP/CVLIB libraries to compile from source])

### Library Directories ####################################################################################################
test -z "$install_group" && install_group="ucode"
AC_ARG_VAR([install_group], [(UNIX group to use for installation)])

test -z "$install_root" && install_root="./libs/"
AC_ARG_VAR([install_root], [Location to place libraries compiled from this diag])

if [ test -e $cv_common_dir/lib_root_$PROJECT/local_lib_root ] ; then
  lib_root=`sed q "$cv_common_dir/lib_root_$PROJECT/local_lib_root" | tr -d '\n'`
else
  if [ test -e $cv_common_dir/lib_root/local_lib_root ] ; then
    lib_root=`sed q "$cv_common_dir/lib_root/local_lib_root" | tr -d '\n'`
  else
    if [ test -d $lib_root ]; then
      echo "Using lib_root from environment"
    else
      if [ test -e $cv_common_dir/.release_lib_root ]; then
        lib_root=`sed q "$cv_common_dir/.release_lib_root" | tr -d '\n'`
      else
        test -z "$lib_root" && lib_root="/cv1/sequence/test_sequence/release_lib/stable"
      fi
    fi
  fi
fi

AC_ARG_VAR([lib_root], [Location to read compiled libraries from])

echo "AUTOCONF :: Precompiled library directory set to \"$lib_root\""

### Files to generate from *.in files ######################################################################################

# Files go generate from *.in files
AC_CONFIG_FILES([
	Makefile
	Makefile.real

	UcodeConfig.pm

	cvtask/include.mk
	cvlib/include.mk

	])

AC_CONFIG_COMMANDS([configFlexidag],
[
  rundir=`pwd`
  if [ test $flexidag_mode != 0 ]; then
    echo "Configuring $srcdir/flexidag"
    mkdir -p flexidag
    cd flexidag
    remoteconfig $srcdir/flexidag -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt amalgam_diag=$amalgam_diag -opt chide_diag=$chide_diag -opt use_ace_platform=$use_ace_platform -opt asil_prototype_mode=$asil_prototype_mode
    cd $rundir
  fi
],
[
  build_scheduler=$build_scheduler;
  srcdir=$srcdir;
  cv_common_dir=$cv_common_dir;
  orc_common_dir=$orc_common_dir;
  amalgam_diag=$amalgam_diag;
  chide_diag=$chide_diag;
  use_ace_platform=$use_ace_platform;
  flexidag_mode=$flexidag_mode;
  asil_prototype_mode=$asil_prototype_mode;
])

AC_CONFIG_COMMANDS([configScheduler],
[
  rundir=`pwd`
  if [ test $build_scheduler != 0 ]; then
    echo "Configuring $srcdir/scheduler"
    mkdir -p scheduler
    cd scheduler
    remoteconfig $srcdir/scheduler -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt amalgam_diag=$amalgam_diag -opt chide_diag=$chide_diag -opt use_ace_platform=$use_ace_platform -opt asil_prototype_mode=$asil_prototype_mode -opt add_core_logger=$add_core_logger -opt add_core_muxer=$add_core_muxer
    cd $rundir
  fi
],
[
  build_scheduler=$build_scheduler;
  srcdir=$srcdir;
  cv_common_dir=$cv_common_dir;
  orc_common_dir=$orc_common_dir;
  amalgam_diag=$amalgam_diag;
  chide_diag=$chide_diag;
  use_ace_platform=$use_ace_platform;
  asil_prototype_mode=$asil_prototype_mode;
  add_core_logger=$add_core_logger;
  add_core_muxer=$add_core_muxer;
])

AC_CONFIG_COMMANDS([configVPCVtasks],
[
  rundir=`pwd`

  for task in $default_vp_cvtasks; do
    if [ test -e $srcdir/cvtask/orcvp/$task/configure.ac ]; then
      echo "Configuring $srcdir/cvtask/orcvp/$task"
      mkdir -p cvtask/orcvp/$task
      cd cvtask/orcvp/$task
      if [test -z "$orccvtask"]; then
        remoteconfig $srcdir/cvtask/orcvp/$task -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcvp -opt orccvtask=$task
      else
        remoteconfig $srcdir/cvtask/orcvp/$task -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcvp -opt orccvtask=$orccvtask
      fi
      cd $rundir
    else
      AC_MSG_ERROR(["Could not configure $srcdir/cvtask/orcvp/$task"])
    fi
  done

  for task in $diag_vp_cvtasks; do
    if [ test -e $srcdir/cvtask/orcvp/$task/configure.ac ]; then
      echo "Configuring $srcdir/cvtask/orcvp/$task"
      mkdir -p cvtask/orcvp/$task
      cd cvtask/orcvp/$task
      if [test -z "$orccvtask"]; then
        remoteconfig $srcdir/cvtask/orcvp/$task -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcvp -opt orccvtask=$task
      else
        remoteconfig $srcdir/cvtask/orcvp/$task -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcvp -opt orccvtask=$orccvtask
      fi
      cd $rundir
    else
      if [ test -e $test_srcdir/cvtask/orcvp/$task/configure.ac ]; then
        echo "Configuring Diag-only $test_srcdir/cvtask/orcvp/$task"
        mkdir -p cvtask/orcvp/$task
        cd cvtask/orcvp/$task
        if [test -z "$orccvtask"]; then
          remoteconfig $test_srcdir/cvtask/orcvp/$task -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcvp -opt orccvtask=$task
        else
          remoteconfig $test_srcdir/cvtask/orcvp/$task -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcvp -opt orccvtask=$orccvtask
        fi
        cd $rundir
      else
        AC_MSG_ERROR(["Could not configure $srcdir/cvtask/orcvp/$task"])
      fi
    fi
  done

  for task in $diag_vp_any_cvtasks; do
    if [ test -e $srcdir/cvtask/orcany/$task/configure.ac ]; then
      echo "Configuring $srcdir/cvtask/orcvp/$task from orcany"
      mkdir -p cvtask/orcvp/$task
      cd cvtask/orcvp/$task
      if [test -z "$orccvtask"]; then
        remoteconfig $srcdir/cvtask/orcany/$task -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcvp -opt orccvtask=$task
      else
        remoteconfig $srcdir/cvtask/orcany/$task -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcvp -opt orccvtask=$orccvtask
      fi
      cd $rundir
    else
      if [ test -e $test_srcdir/cvtask/orcany/$task/configure.ac ]; then
        echo "Configuring Diag-only $test_srcdir/cvtask/orcvp/$task from orcany"
        mkdir -p cvtask/orcvp/$task
        cd cvtask/orcvp/$task
        if [test -z "$orccvtask"]; then
          remoteconfig $test_srcdir/cvtask/orcany/$task -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcvp -opt orccvtask=$task
        else
          remoteconfig $test_srcdir/cvtask/orcany/$task -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcvp -opt orccvtask=$orccvtask
        fi
        cd $rundir
      else
        AC_MSG_ERROR(["Could not configure $srcdir/cvtask/orcany/$task"])
      fi
    fi
  done

],
[
  diag_vp_cvtasks="$diag_vp_cvtasks";
  diag_vp_any_cvtasks="$diag_vp_any_cvtasks";
  default_vp_cvtasks="$default_vp_cvtasks";
  test_srcdir=$test_srcdir;
  srcdir=$srcdir;
  cv_common_dir=$cv_common_dir;
  orc_common_dir=$orc_common_dir;
  orccvtask=$orccvtask;
])

AC_CONFIG_COMMANDS([configCVLibs],
[
  rundir=`pwd`

  for cvlibname in $default_vp_cvlib_srcs; do
    if [ test -e $srcdir/cvlib/$cvlibname/configure.ac ]; then
      echo "Configuring $srcdir/orcvp/cvlib/$cvlibname"
      mkdir -p cvlib/orcvp/$cvlibname
      cd cvlib/orcvp/$cvlibname
      remoteconfig $srcdir/cvlib/$cvlibname -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcvp
      cd $rundir
    else
      AC_MSG_ERROR(["Could not configure $srcdir/cvlib/$cvlibname"])
    fi
  done

  for cvlibname in $default_sod_cvlib_srcs; do
    if [ test -e $srcdir/cvlib/$cvlibname/configure.ac ]; then
      echo "Configuring $srcdir/orcsod/cvlib/$cvlibname"
      mkdir -p cvlib/orcsod/$cvlibname
      cd cvlib/orcsod/$cvlibname
      remoteconfig $srcdir/cvlib/$cvlibname -opt cv_common_dir=$cv_common_dir -opt orc_common_dir=$orc_common_dir -opt orc=orcsod
      cd $rundir
    else
      AC_MSG_ERROR(["Could not configure $srcdir/cvlib/$cvlibname"])
    fi
  done
],
[
  srcdir=$srcdir;
  cv_common_dir=$cv_common_dir;
  orc_common_dir=$orc_common_dir;
  default_vp_cvlib_srcs=$default_vp_cvlib_srcs;
  default_sod_cvlib_srcs=$default_sod_cvlib_srcs;
])

AC_OUTPUT

