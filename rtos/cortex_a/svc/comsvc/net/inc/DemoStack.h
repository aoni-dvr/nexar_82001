/**
 * @file DemoStack.h
 * Amba example UDP/IP stack (used only for driver unit test)
 *
 * @ingroup enet
 *
 * Copyright (c) [2020] Ambarella International LP
 *
 * This file and its contents ("Software") are protected by intellectual
 * property rights including, without limitation, U.S. and/or foreign
 * copyrights. This Software is also the confidential and proprietary
 * information of Ambarella International LP and its licensors. You may not use, reproduce,
 * disclose, distribute, modify, or otherwise prepare derivative works of this
 * Software or any portion thereof except pursuant to a signed license agreement
 * or nondisclosure agreement with Ambarella International LP or its authorized affiliates.
 * In the absence of such an agreement, you agree to promptly notify and return
 * this Software to Ambarella International LP.
 *
 * This file includes sample code and is only for internal testing and evaluation.  If you 
 * distribute this sample code (whether in source, object, or binary code form), it will be 
 * without any warranty or indemnity protection from Ambarella International LP or its affiliates.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef AMBA_ENET_DEMOSTACK_H
#define AMBA_ENET_DEMOSTACK_H
/* TXFASTPATH: useful when data is generated by DSP and you want to bypass CPU cache */
//#define TXFASTPATH
#define AMBA_DEMO_STACK_GETTXBUF_f  AMBA_NET_STACK_GETTXBUF_f
#define AMBA_DEMO_STACK_GETRXBUF_f  AMBA_NET_STACK_GETRXBUF_f
#define AMBA_DEMO_STACK_DOTX_f      AMBA_NET_STACK_DOTX_f
#define AMBA_DEMO_STACK_RX_f        AMBA_NET_STACK_RX_f

typedef struct
{
    UINT32 Ip;
    UINT8 Mac[6];
} AMBA_DEMO_STACK_ARP_s;

typedef struct {
    UINT32                 Ip;
    UINT16                 seqno;
    INT32                  poll_var;
    AMBA_DEMO_STACK_ARP_s  arp;
} AmbaDemoStackIcmpTab;

typedef struct
{
    AMBA_DEMO_STACK_GETTXBUF_f pGetTxBufCb;
    AMBA_DEMO_STACK_GETRXBUF_f pGetRxBufCb;
    AMBA_DEMO_STACK_DOTX_f     pDoTxCb;
    AMBA_DEMO_STACK_RX_f       pRxCb;
    UINT32                     Idx;
    UINT32                     Ip;
    UINT8                      Mac[6];
    UINT16                     IpIdCnt;
    UINT16                     tci;
    AmbaDemoStackIcmpTab       IcmpClnt;
} AMBA_DEMO_STACK_CONFIG_s;

typedef struct
{
    UINT8  verhdrlen;
    UINT8  service;
    UINT16 len;
    UINT16 ident;
    UINT16 frags;
    UINT8  ttl;
    UINT8  protocol;
    UINT16 chksum;
    UINT32 src;
    UINT32 dest;
} __attribute__((packed)) AMBA_DEMO_STACK_IP_HDR_s;

typedef struct
{
    UINT16  src;
    UINT16  dest;
    UINT16  len;
    UINT16  chksum;
} __attribute__((packed)) UDP_HDR_s;

/* API */
UINT32 AmbaDemoStack_SetConfig(UINT32 Idx, AMBA_DEMO_STACK_CONFIG_s *pDemoConfig);
UINT32 AmbaDemoStack_GetConfig(UINT32 Idx, AMBA_DEMO_STACK_CONFIG_s **pDemoConfig);
UINT32 AmbaDemoStack_EnetInit(AMBA_DEMO_STACK_CONFIG_s *pDemoConfig);
UINT32 AmbaDemoStack_Ping(const UINT32 Idx, const UINT32 DstIp, const UINT32 TMO);
UINT32 AmbaDemoStack_TxUdp(UINT32 Idx, UINT32 DstIp);

#endif /* AMBA_ENET_DEMOSTACK_H */
