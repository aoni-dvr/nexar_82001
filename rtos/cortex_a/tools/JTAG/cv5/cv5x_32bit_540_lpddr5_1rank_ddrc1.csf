
execute CV5.def


// cortex pll setting
MWriteS32 PLL_CORTEX_CTRL_REG                   0x4a120000
MWriteS32 PLL_CORTEX_CTRL_REG                   0x4a120001
MWriteS32 PLL_CORTEX_CTRL_REG                   0x4a120000

// dsu pll setting
MWriteS32 PLL_DSU_CTRL_REG                      0x4a120000
MWriteS32 PLL_DSU_CTRL_REG                      0x4a120001
MWriteS32 PLL_DSU_CTRL_REG                      0x4a120000

// core pll setting
MWriteS32 PLL_CORE_CTRL_REG                     0x45160000
MWriteS32 PLL_CORE_CTRL_REG                     0x45160001
MWriteS32 PLL_CORE_CTRL_REG                     0x45160000

// idsp pll setting
MWriteS32 PLL_IDSP_CTRL_REG                     0x4a140000
MWriteS32 PLL_IDSP_CTRL_REG                     0x4a140001
MWriteS32 PLL_IDSP_CTRL_REG                     0x4a140000

// vision pll setting
MWriteS32 PLL_VISION_CTRL_REG                   0x53130000
MWriteS32 PLL_VISION_CTRL_REG                   0x53130001
MWriteS32 PLL_VISION_CTRL_REG                   0x53130000

// dram pll setting
MWriteS32 PLL_DDR_CTRL_REG_DDRH1                0x2c010000
MWriteS32 PLL_DDR_CTRL2_REG_DDRH1               0x20520300
MWriteS32 PLL_DDR_CTRL3_REG_DDRH1               0x000c8000
MWriteS32 PLL_DDR_CTRL_REG_DDRH1                0x2c010001
MWriteS32 PLL_DDR_CTRL_REG_DDRH1                0x2c010000

// Program Number of DDRHOST in DRAM
MWriteS32 DRAM_MODE_REG                         0x00000014

// setup DDRIO dll Control settings
MWriteS32 DLL_CTRL_SEL0_DIE0_DDRC1              0x20202020
MWriteS32 DLL_CTRL_SEL1_DIE0_DDRC1              0x0f0f0f0f
MWriteS32 DLL_CTRL_SEL2_DIE0_DDRC1              0x20202020
MWriteS32 DLL_CTRL_SEL0_DIE1_DDRC1              0x20202020
MWriteS32 DLL_CTRL_SEL1_DIE1_DDRC1              0x0f0f0f0f
MWriteS32 DLL_CTRL_SEL2_DIE1_DDRC1              0x20202020
MWriteS32 DLL_CTRL_SBC_0_DDRC1                  0x00e1b881
MWriteS32 DLL_CTRL_SBC_1_DDRC1                  0x00e1b881
MWriteS32 DLL_CTRL_SBC_2_DDRC1                  0x00e1b881
MWriteS32 DLL_CTRL_SBC_3_DDRC1                  0x00e1b881
MWriteS32 BYTE0_DLY0_DIE0_DDRC1                 0x00052808
MWriteS32 BYTE0_DLY1_DIE0_DDRC1                 0x02a1a800
MWriteS32 BYTE0_DLY2_DIE0_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE0_DLY3_DIE0_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE0_DLY4_DIE0_DDRC1                 0x01010101
MWriteS32 BYTE0_DLY5_DIE0_DDRC1                 0x01010101
MWriteS32 BYTE0_DLY0_DIE1_DDRC1                 0x00052808
MWriteS32 BYTE0_DLY1_DIE1_DDRC1                 0x02a1a800
MWriteS32 BYTE0_DLY2_DIE1_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE0_DLY3_DIE1_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE0_DLY4_DIE1_DDRC1                 0x01010101
MWriteS32 BYTE0_DLY5_DIE1_DDRC1                 0x01010101
MWriteS32 BYTE1_DLY0_DIE0_DDRC1                 0x00052808
MWriteS32 BYTE1_DLY1_DIE0_DDRC1                 0x02a1a800
MWriteS32 BYTE1_DLY2_DIE0_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE1_DLY3_DIE0_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE1_DLY4_DIE0_DDRC1                 0x01010101
MWriteS32 BYTE1_DLY5_DIE0_DDRC1                 0x01010101
MWriteS32 BYTE1_DLY0_DIE1_DDRC1                 0x00052808
MWriteS32 BYTE1_DLY1_DIE1_DDRC1                 0x02a1a800
MWriteS32 BYTE1_DLY2_DIE1_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE1_DLY3_DIE1_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE1_DLY4_DIE1_DDRC1                 0x01010101
MWriteS32 BYTE1_DLY5_DIE1_DDRC1                 0x01010101
MWriteS32 BYTE2_DLY0_DIE0_DDRC1                 0x00052808
MWriteS32 BYTE2_DLY1_DIE0_DDRC1                 0x02a1a800
MWriteS32 BYTE2_DLY2_DIE0_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE2_DLY3_DIE0_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE2_DLY4_DIE0_DDRC1                 0x01010101
MWriteS32 BYTE2_DLY5_DIE0_DDRC1                 0x01010101
MWriteS32 BYTE2_DLY0_DIE1_DDRC1                 0x00052808
MWriteS32 BYTE2_DLY1_DIE1_DDRC1                 0x02a1a800
MWriteS32 BYTE2_DLY2_DIE1_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE2_DLY3_DIE1_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE2_DLY4_DIE1_DDRC1                 0x01010101
MWriteS32 BYTE2_DLY5_DIE1_DDRC1                 0x01010101
MWriteS32 BYTE3_DLY0_DIE0_DDRC1                 0x00052808
MWriteS32 BYTE3_DLY1_DIE0_DDRC1                 0x02a1a800
MWriteS32 BYTE3_DLY2_DIE0_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE3_DLY3_DIE0_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE3_DLY4_DIE0_DDRC1                 0x01010101
MWriteS32 BYTE3_DLY5_DIE0_DDRC1                 0x01010101
MWriteS32 BYTE3_DLY0_DIE1_DDRC1                 0x00052808
MWriteS32 BYTE3_DLY1_DIE1_DDRC1                 0x02a1a800
MWriteS32 BYTE3_DLY2_DIE1_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE3_DLY3_DIE1_DDRC1                 0x0a0a0a0a
MWriteS32 BYTE3_DLY4_DIE1_DDRC1                 0x01010101
MWriteS32 BYTE3_DLY5_DIE1_DDRC1                 0x01010101
MWriteS32 CK_DELAY_DDRC1                        0x00000000
MWriteS32 CA_DELAY_COARSE_DDRC1                 0x00000000
MWriteS32 CKE_DELAY_COARSE_DDRC1                0x00000000
MWriteS32 DDRIO_VREF_0_DDRC1                    0x220c220c
MWriteS32 DDRIO_VREF_1_DDRC1                    0x220c220c

// initial delay of 300us
Wait 1.ms


// ----------------------------------------------------------------
// Starting Initialization sequence for DDRC1
// ----------------------------------------------------------------

// Disable DRAM initially
MWriteS32 DRAM_CONTROL_DDRC1                    0x00000000

// wait tINIT1 = 200us
Wait 1.ms


// Programming DDRC configurations and timing registers
// program DRAM_CONFIG1
MWriteS32 DRAM_CONFIG1_DDRC1                    0x010f3899

// program DRAM_CONFIG2
MWriteS32 DRAM_CONFIG2_DDRC1                    0x00001000

// program DRAM_TIMING1
MWriteS32 DRAM_TIMING1_DDRC1                    0x05020201

// program DRAM_TIMING2
MWriteS32 DRAM_TIMING2_DDRC1                    0x01040008

// program DRAM_TIMING3
MWriteS32 DRAM_TIMING3_DDRC1                    0x0204040c

// program DRAM_TIMING4
MWriteS32 DRAM_TIMING4_DDRC1                    0x00020303

// program DRAM_TIMING5
MWriteS32 DRAM_TIMING5_DDRC1                    0x21062280

// program DUAL_DIE_TIMING
MWriteS32 DUAL_DIE_TIMING_DDRC1                 0x1f1f1f1f

// program REFRESH_TIMING
MWriteS32 REFRESH_TIMING_DDRC1                  0x01004a12

// program LP5_TIMING
MWriteS32 LP5_TIMING_DDRC1                      0x00001111

// program DRAM_RSVD_SPACE
MWriteS32 DRAM_RSVD_SPACE_DDRC1                 0xfff00000

// program DRAM_BYTE_MAP
MWriteS32 DRAM_BYTE_MAP_DDRC1                   0x000000e4

// program DRAM_WDQS_TIMING
MWriteS32 DRAM_WDQS_TIMING_DDRC1                0x00000000

// program DTTE_TIMING
MWriteS32 DTTE_TIMING_DDRC1                     0x00640040

// program DDRIO_PAD_CTRL
MWriteS32 DDRIO_PAD_CTRL_DDRC1                  0x00000010

// program DDRIO_DQS_PUPD
MWriteS32 DDRIO_DQS_PUPD_DDRC1                  0x00000006

// program DDRIO_CA_PADCTRL
MWriteS32 DDRIO_CA_PADCTRL_DDRC1                0x03470347

// program DDRIO_DQ_PADCTRL
MWriteS32 DDRIO_DQ_PADCTRL_DDRC1                0x03170317

// program DDRIO_IBIAS_CTRL
MWriteS32 DDRIO_IBIAS_CTRL_DDRC1                0x04000000

// wait 10ns to allow RESET/CKE PAD to start driving after DDS is set to non-0 value
Wait 1.ms


// Disable DRAM Reset
MWriteS32 DRAM_IO_CONTROL_DDRC1                 0x00000010

// wait tINIT3 = 2ms
Wait 1.ms


// issue DLL RST
MWriteS32 DRAM_INIT_CTL_DDRC1                   0x00000008

// Wait for completion
while ((MRead("S32L", d:DRAM_INIT_CTL_DDRC1)&0x8)!=0x0)
(
)


// wait 20 ns to make sure DLL reset done
Wait 1.ms


// exit Power Down - drive CS = 1
MWriteS32 DRAM_UINST1_DDRC1                     0x00000001

// Program  DRAM_UINST1
MWriteS32 DRAM_UINST2_DDRC1                     0x00000000

// Program  DRAM_UINST2
MWriteS32 DRAM_UINST4_DDRC1                     0x00000303

// Program  DRAM_UINST4
MWriteS32 DRAM_UINST5_DDRC1                     0x00000001

// Program  DRAM_UINST5
while ((MRead("S32L", d:DRAM_UINST5_DDRC1)&0x1)!=0x0)
(
)


// wait for tCSH = 3ns
Wait 1.ms


// exit Power Down - release CS
MWriteS32 DRAM_UINST1_DDRC1                     0x00000002

// Program  DRAM_UINST1
MWriteS32 DRAM_UINST2_DDRC1                     0x00000000

// Program  DRAM_UINST2
MWriteS32 DRAM_UINST4_DDRC1                     0x00000303

// Program  DRAM_UINST4
MWriteS32 DRAM_UINST5_DDRC1                     0x00000001

// Program  DRAM_UINST5
while ((MRead("S32L", d:DRAM_UINST5_DDRC1)&0x1)!=0x0)
(
)


// wait for tINIT5 = 2us
Wait 1.ms


//  **** SET MODE REGISTERS FOR FSP0 ***

// Program MR16
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f100040

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// wait for tVRCG_Enable
Wait 1.ms


// Program MR1
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f010050

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR2
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f020022

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR18
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f120012

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR19
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f130000

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR30
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f1e0000

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR3
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f030016

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR10
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f0a0089

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR13
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f0d00d0

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR41
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f290040

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR11
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f0b002a

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// wait for tODTUPWait 1.ms


// Program MR12
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f0c0021

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR14
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f0e0020

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR15
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f0f0020

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// wait for Tvref_longWait 1.ms


// Program MR17
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f110004

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// wait for tODTUPWait 1.ms


// Program MR20
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f140002

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR28
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f1c0004

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR22
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f160000

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Program MR24
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9f180000

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Perform ZQ calibration for die 0
MWriteS32 DRAM_UINST1_DDRC1                     0x0000000d

// Program  DRAM_UINST1
MWriteS32 DRAM_UINST2_DDRC1                     0x00000670

// Program  DRAM_UINST2
MWriteS32 DRAM_UINST4_DDRC1                     0x00000301

// Program  DRAM_UINST4
MWriteS32 DRAM_UINST5_DDRC1                     0x00000001

// Program  DRAM_UINST5
while ((MRead("S32L", d:DRAM_UINST5_DDRC1)&0x1)!=0x0)
(
)


// wait 30ns (TZQLAT)
Wait 1.ms


// trigger manual long PAD calibration
MWriteS32 DDRIO_ZCTRL_DDRC1                     0x00000280

// Wait for acknowledgment
while ((MRead("S32L", d:ZCTRL_STATUS_DDRC1)&0x2000)!=0x2000)
(
)


// drop manual long PAD calibration
MWriteS32 DDRIO_ZCTRL_DDRC1                     0x00000200
MWriteS32 DRAM_UINST1_DDRC1                     0x0000100e

// Program  DRAM_UINST1
MWriteS32 DRAM_UINST2_DDRC1                     0x00000000

// Program  DRAM_UINST2
MWriteS32 DRAM_UINST4_DDRC1                     0x00000303

// Program  DRAM_UINST4
MWriteS32 DRAM_UINST5_DDRC1                     0x00000001

// Program  DRAM_UINST5
while ((MRead("S32L", d:DRAM_UINST5_DDRC1)&0x1)!=0x0)
(
)


// setting DDR to Enhance RDQS mode

// Program MR46
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9b2e0001

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// set DQS gate to 1
MWriteS32 DRAM_CONFIG2_DDRC1                    0x00000800
Wait 1.ms


// issue GET_RTT_EN command for die 0
MWriteS32 DRAM_INIT_CTL_DDRC1                   0x00000004

// Wait for completion
while ((MRead("S32L", d:DRAM_INIT_CTL_DDRC1)&0x4)!=0x0)
(
)

MWriteS32 DRAM_CONFIG2_DDRC1                    0x00001000
Wait 1.ms


// Unset DDR Enhance RDQS mode

// Program MR46
MWriteS32 DRAM_MODE_REG_DDRC1                   0x9b2e0000

// Wait for completion
while ((MRead("S32L", d:DRAM_MODE_REG_DDRC1)&0x80000000)!=0x0)
(
)


// Enable AUTO Refresh - Enable DRAM - (for all DDRHOSTs)
MWriteS32 DRAM_CONTROL_DDRC1                    0x00000003

// Initialization Done
