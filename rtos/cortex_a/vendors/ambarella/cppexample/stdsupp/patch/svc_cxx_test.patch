diff --git a/Kconfig b/Kconfig
index 236caebe7..a4de7b897 100755
--- a/Kconfig
+++ b/Kconfig
@@ -42,5 +42,8 @@ source build/kconfigs/Kconfig.foss
 
 source vendors/arm/arm-trusted-firmware/Kconfig
 
+#CPP example
+source vendors/ambarella/cppexample/Kconfig
+
 # App
 source svc/apps/Kconfig
diff --git a/Makefile.Amba b/Makefile.Amba
index 01cf84eb8..fe3bae647 100755
--- a/Makefile.Amba
+++ b/Makefile.Amba
@@ -102,6 +102,7 @@ rtos_common_dirs	+= $(call if_mk_exist,soc/dsp)
 #rtos_common_dirs	+= $(call if_mk_exist,soc/dsp/visual/build/threadx)
 rtos_common_dirs	+= $(call if_mk_exist,soc/vision)
 rtos_common_dirs	+= $(call if_exist,vendors/foss)
+rtos_common_dirs	+= $(call if_exist,vendors/ambarella/cppexample)
 
 # ---- Dependent ------------------------------------------------------------
 svc_dirs    := $(rtos_common_dirs)
diff --git a/apps/icam/main/build/threadx/amba_svc.lds.S b/apps/icam/main/build/threadx/amba_svc.lds.S
index cd81a3546..52b139806 100755
--- a/apps/icam/main/build/threadx/amba_svc.lds.S
+++ b/apps/icam/main/build/threadx/amba_svc.lds.S
@@ -120,6 +120,22 @@ SECTIONS
 		/* For libaudio.a */
 		* (i.__ARM_common*)
 		* (FFTCODE*)
+#ifdef CONFIG_CC_USESTD
+		. = ALIGN(32);
+		PROVIDE_HIDDEN (__preinit_array_start = .);
+		KEEP (*(.preinit_array))
+		PROVIDE_HIDDEN (__preinit_array_end = .);
+		. = ALIGN(32);
+		PROVIDE_HIDDEN (__init_array_start = .);
+		KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*)))
+		KEEP (*(.init_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .ctors))
+		PROVIDE_HIDDEN (__init_array_end = .);
+		. = ALIGN(32);
+		PROVIDE_HIDDEN (__fini_array_start = .);
+		KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*)))
+		KEEP (*(.fini_array EXCLUDE_FILE (*crtbegin.o *crtbegin?.o *crtend.o *crtend?.o ) .dtors))
+		PROVIDE_HIDDEN (__fini_array_end = .);
+#endif /* CONFIG_CC_USESTD */
 		__ddr_region0_ro_end = .;
 
 		. = ALIGN(64);
@@ -202,9 +218,44 @@ SECTIONS
 	. = ALIGN(0x1000);
 	PROVIDE (end = .);
 	__sbrk_start = .;
+#ifdef CONFIG_CC_USESTD
+	. = __sbrk_start + 0x10000;
+#else
 	. = __sbrk_start + 0x2000;
+#endif /* CONFIG_CC_USESTD */
 	__sbrk_end = .;
 
+#ifdef CONFIG_CC_CXX_SUPPORT
+	. = ALIGN(32);
+	.ARM.extab   : { *(.ARM.extab* .gnu.linkonce.armextab.*) }
+	PROVIDE_HIDDEN (__exidx_start = .);
+	.ARM.exidx   : { *(.ARM.exidx* .gnu.linkonce.armexidx.*) }
+	PROVIDE_HIDDEN (__exidx_end = .);
+	.eh_frame_hdr : { *(.eh_frame_hdr) *(.eh_frame_entry .eh_frame_entry.*) }
+	.eh_frame       : ONLY_IF_RO { KEEP (*(.eh_frame)) *(.eh_frame.*) }
+	.gcc_except_table   : ONLY_IF_RO { *(.gcc_except_table
+			.gcc_except_table.*) }
+	.gnu_extab   : ONLY_IF_RO { *(.gnu_extab*) }
+	/* These sections are generated by the Sun/Oracle C++ compiler.  */
+	.exception_ranges   : ONLY_IF_RO { *(.exception_ranges
+			.exception_ranges*) }
+	/* Adjust the address for the data segment.  We want to adjust up to
+	   the same address within the page on the next page up.  */
+	. = ALIGN(CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 1));
+	/* Exception handling  */
+	.eh_frame       : ONLY_IF_RW { KEEP (*(.eh_frame)) *(.eh_frame.*) }
+	.gnu_extab      : ONLY_IF_RW { *(.gnu_extab) }
+	.gcc_except_table   : ONLY_IF_RW { *(.gcc_except_table .gcc_except_table.*) }
+	.exception_ranges   : ONLY_IF_RW { *(.exception_ranges .exception_ranges*) }
+#endif /* CONFIG_CC_CXX_SUPPORT */
+
+#ifdef CONFIG_CC_USESTD
+	. = ALIGN(32);
+	__memutilpool_start = .;
+	. = __memutilpool_start + 0x400000;
+	__memutilpool_end = .;
+#endif /* CONFIG_CC_USESTD */
+
 	.bss.noinit : {
 		. = ALIGN(64);
 		__noinit_start = .;
@@ -216,6 +267,8 @@ SECTIONS
 		. = ALIGN(64);
 		__bss_start = .;
 		* (.bss*)
+		* (COMMON)
+		*(.gnu.linkonce.b.*)
 		__bss_end = .;
 	}
 
diff --git a/apps/icam/main/build/threadx/link-amba_data.sh b/apps/icam/main/build/threadx/link-amba_data.sh
index f5e80c814..ddec135f8 100755
--- a/apps/icam/main/build/threadx/link-amba_data.sh
+++ b/apps/icam/main/build/threadx/link-amba_data.sh
@@ -267,6 +267,18 @@ if [ "${CONFIG_OPENAMP}" = "y" ]; then
     AMBA_LIBS="${AMBA_LIBS} libopen_amp.a libmetal.a"
 fi
 
+if [ "x${CONFIG_CC_USESTD}" != "x" ]; then
+    AMBA_LIBS="${AMBA_LIBS} libstdsupp.a"
+fi
+
+if [ "${CONFIG_BUILD_FOSS_OPENCV}" = "y" ]; then
+    AMBA_LIBS="${AMBA_LIBS} libopencv_core.a"
+    AMBA_LIBS="${AMBA_LIBS} libopencv_imgproc.a"
+    AMBA_LIBS="${AMBA_LIBS} libopencv_hal.a"
+    AMBA_LIBS="${AMBA_LIBS} libopencv_ml.a"
+    AMBA_LIBS="${AMBA_LIBS} libopencv_test.a"
+fi
+
 # Search lib path
 __LINK_AMBA_LIBS="--whole-archive"
 for i in ${AMBA_LIBS}; do
@@ -298,11 +310,18 @@ LINK_LIBS="${__LINK_AMBA_LIBS} "
 LINK_LDS="${AMBA_LDS}"
 LINK_LDFLAGS="${LDFLAGS} ${LDFLAGS_amba_common} "
 if [ "x${CONFIG_CC_USESTD}" != "x" ]; then
-    LINK_LIBS+="-lnosys "
+    if [ "x${CONFIG_CC_CXX_SUPPORT}" != "x" ]; then
+        __LINK_C_LIBS+="-lstdc++ "
+        LINK_LDFLAGS+="-L$(dirname $(readlink -f `${CC} ${KBUILD_CFLAGS} -print-file-name=libstdc++.a`)) "
+    fi
+    if [ "x${CONFIG_BUILD_SYSCALL_LIB}" != "x" ]; then
+        LINK_LIBS+="-lsyscall "
+    else
+        LINK_LIBS+="-lnosys "
+        LINK_LDFLAGS+="-L$(dirname $(readlink -f `${CC} ${KBUILD_CFLAGS} -print-file-name=libnosys.a`)) "
+    fi
     LINK_LDFLAGS+="-L$(dirname $(readlink -f `${CC} ${KBUILD_CFLAGS} -print-file-name=libc.a`)) "
     LINK_LDFLAGS+="-L$(dirname $(readlink -f `${CC} ${KBUILD_CFLAGS} -print-file-name=libgcc.a`)) "
-    LINK_LDFLAGS+="-L$(dirname $(readlink -f `${CC} ${KBUILD_CFLAGS} -print-file-name=libstdc++.a`)) "
-    LINK_LDFLAGS+="-L$(dirname $(readlink -f `${CC} ${KBUILD_CFLAGS} -print-file-name=libnosys.a`)) "
 fi
 LINK_LDFLAGS+="-L${AMBA_O_LIB} "
 
@@ -338,7 +357,10 @@ LINK_OUTPUT_NM=$(echo ${IMG_NAME} | sed -e 's/elf/nm/')
 LINK_CMD="${LD} ${LINK_LDFLAGS} -o ${LINK_OUTPUT_ELF} -T ${AMBA_LDS} --start-group ${LINK_LIBS} ${LINK_OBJS} ${__LINK_C_LIBS} --end-group "
 LINK_CMD+=" -Map=${LINK_OUTPUT_MAP} --cref "
 if [ "${CONFIG_ARM64}" != "y" ]; then
-LINK_CMD+="--wrap=memcpy"
+	LINK_CMD+="--wrap=memcpy "
+	if [ "x${CONFIG_CC_USESTD}" != "x" ]; then
+		LINK_CMD+="--wrap=malloc --wrap=free --wrap=calloc --wrap=realloc "
+	fi
 fi
 NM_CMD="${NM} -n -l ${LINK_OUTPUT_ELF}"
 OBJCOPY_CMD="${OBJCOPY} -O binary ${LINK_OUTPUT_ELF} ${LINK_OUTPUT_BIN}"
diff --git a/apps/icam/main/src/cmd/SvcCmdApp.c b/apps/icam/main/src/cmd/SvcCmdApp.c
index cc57ad570..6bdee0622 100755
--- a/apps/icam/main/src/cmd/SvcCmdApp.c
+++ b/apps/icam/main/src/cmd/SvcCmdApp.c
@@ -255,6 +255,9 @@ static void CmdAppUsage(AMBA_SHELL_PRINT_f PrintFunc)
     PrintFunc(" warp file [FovID] [Enable] [Header] [File name]: Apply warp table from file\n");
     PrintFunc(" yuvfeed_file start [FovBits] [FileNum] [Interval] [FileName 1] ... [FileName N]: Start YUV file Feeding Task\n");
     PrintFunc(" yuvfeed_file stop [FovBits]: Stop YUV file Feeding Task\n");
+#ifdef CONFIG_CC_CXX_SUPPORT
+    PrintFunc(" test_cxx: run cxx test flow.\n");
+#endif
 }
 
 #if defined(CONFIG_ICAM_RECORD_USED)
@@ -5446,6 +5449,14 @@ static void CmdAppEntry(UINT32 ArgCount, char * const *pArgVector, AMBA_SHELL_PR
             } else {
                 Rval = SVC_NG;
             }
+#ifdef CONFIG_CC_CXX_SUPPORT
+        } else if (0 == SvcWrap_strcmp("test_cxx", pArgVector[1U])) {
+            extern void AmbaCRT0(void);
+            extern void cpp_test(void);
+
+            AmbaCRT0();
+            cpp_test();
+#endif /* CONFIG_CC_CXX_SUPPORT */
         } else {
             Rval = SVC_NG;
         }
