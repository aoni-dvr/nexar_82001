@/**************************************************************************/
@/*                                                                        */
@/*            Copyright (c) 1996-2017 by Express Logic Inc.               */
@/*                                                                        */
@/*  This software is copyrighted by and is the sole property of Express   */
@/*  Logic, Inc.  All rights, title, ownership, or other interests         */
@/*  in the software remain the property of Express Logic, Inc.  This      */
@/*  software may only be used in accordance with the corresponding        */
@/*  license agreement.  Any unauthorized use, duplication, transmission,  */
@/*  distribution, or disclosure of this software is expressly forbidden.  */
@/*                                                                        */
@/*  This Copyright notice may not be removed or modified without prior    */
@/*  written consent of Express Logic, Inc.                                */
@/*                                                                        */
@/*  Express Logic, Inc. reserves the right to modify this software        */
@/*  without notice.                                                       */
@/*                                                                        */
@/*  Express Logic, Inc.                     info@expresslogic.com         */
@/*  11423 West Bernardo Court               www.expresslogic.com          */
@/*  San Diego, CA  92127                                                  */
@/*                                                                        */
@/**************************************************************************/
@
@
@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/** ThreadX Component                                                     */
@/**                                                                       */
@/**   ThreadX MISRA Compliance                                            */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/

        .text
        .arm

        .globl _tx_misra_memset
        .globl _tx_misra_uchar_pointer_add
        .globl _tx_misra_uchar_pointer_sub
        .globl _tx_misra_uchar_pointer_dif
        .globl _tx_misra_pointer_to_ulong_convert
        .globl _tx_misra_ulong_pointer_add
        .globl _tx_misra_ulong_pointer_sub
        .globl _tx_misra_ulong_pointer_dif
        .globl _tx_misra_ulong_to_pointer_convert
        .globl _tx_misra_message_copy
        .globl _tx_misra_timer_pointer_dif
        .globl _tx_misra_timer_pointer_add
        .globl _tx_misra_user_timer_pointer_get
        .globl _tx_misra_thread_stack_check
        .globl _tx_misra_always_true
        .globl _tx_misra_indirect_void_to_uchar_pointer_convert
        .globl _tx_misra_uchar_to_indirect_uchar_pointer_convert
        .globl _tx_misra_block_pool_to_uchar_pointer_convert
        .globl _tx_misra_void_to_block_pool_pointer_convert
        .globl _tx_misra_void_to_uchar_pointer_convert
        .globl _tx_misra_uchar_to_block_pool_pointer_convert
        .globl _tx_misra_void_to_indirect_uchar_pointer_convert
        .globl _tx_misra_void_to_byte_pool_pointer_convert
        .globl _tx_misra_byte_pool_to_uchar_pointer_convert
        .globl _tx_misra_uchar_to_align_type_pointer_convert
        .globl _tx_misra_uchar_to_indirect_byte_pool_pointer_convert
        .globl _tx_misra_void_to_event_flags_pointer_convert
        .globl _tx_misra_void_to_ulong_pointer_convert
        .globl _tx_misra_void_to_mutex_pointer_convert
        .globl _tx_misra_status_get
        .globl _tx_misra_void_to_queue_pointer_convert
        .globl _tx_misra_void_to_semaphore_pointer_convert
        .globl _tx_misra_uchar_to_void_pointer_convert
        .globl _tx_misra_ulong_to_thread_pointer_convert
        .globl _tx_misra_timer_indirect_to_void_pointer_convert
        .globl _tx_misra_const_char_to_char_pointer_convert
        .globl _tx_misra_void_to_thread_pointer_convert
        .globl _tx_misra_char_to_uchar_pointer_convert

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  VOID  _tx_misra_memset(VOID *ptr, UINT value, UINT size);            */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_memset:
        uxtb    r1, r1
        tst     r0, #3
        lsl     r3, r1, #16
        orr     r3, r3, r1, lsl #24
        orr     r3, r3, r1
        orr     r1, r3, r1, lsl #8
        beq     2f
        cmp     r2, #0
        moveq   r3, r0
        beq     1f
        uxtb    ip, r1
0:      strb    ip, [r0], #1
        sub     r2, r2, #1
        tst     r0, #3
        mov     r3, r0
        beq     2f
        cmp     r2, #0
        bne     0b
1:      add     r3, r3, #1
        tst     r3, #3
        bne     1b
        bx      lr
2:      cmp     r2, #0
        beq     4f
3:      subs    r2, r2, #4
        str     r1, [r0], #4
        bne     3b
        bx      lr
4:      bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  UCHAR  *_tx_misra_uchar_pointer_add(UCHAR *ptr, ULONG amount);       */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_uchar_pointer_add:
        add     r0, r0, r1
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  UCHAR  *_tx_misra_uchar_pointer_sub(UCHAR *ptr, ULONG amount);       */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_uchar_pointer_sub:
        sub     r0, r0, r1
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  ULONG  _tx_misra_uchar_pointer_dif(UCHAR *ptr1, UCHAR *ptr2);        */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_uchar_pointer_dif:
        sub     r0, r0, r1
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  ULONG  _tx_misra_pointer_to_ulong_convert(VOID *ptr);                */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_pointer_to_ulong_convert:
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  ULONG  *_tx_misra_ulong_pointer_add(ULONG *ptr, ULONG amount);       */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_ulong_pointer_add:
        add     r0, r0, r1, lsl #2
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  ULONG  *_tx_misra_ulong_pointer_sub(ULONG *ptr, ULONG amount);       */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_ulong_pointer_sub:
        sub     r0, r0, r1, lsl #2
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  ULONG  _tx_misra_ulong_pointer_dif(ULONG *ptr1, ULONG *ptr2);        */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_ulong_pointer_dif:
        sub     r0, r0, r1
        asr     r0, r0, #2
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  VOID  *_tx_misra_ulong_to_pointer_convert(ULONG input);              */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_ulong_to_pointer_convert:
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  VOID  _tx_misra_message_copy(ULONG **source, ULONG **destination,    */
@/**                                                           UINT size); */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_message_copy:
        ldr     ip, [r0]
        cmp     r2, #1
        push    {r4, r5, r6, lr}
        mov     r6, ip
        ldr     r5, [r1]
        ldr     r3, [r6], #4
        str     r3, [r5], #4
        bls     1f
        sub     r3, r2, #1
        mov     lr, r5
0:      subs    r3, r3, #1
        ldr     r4, [ip, #4]!
        str     r4, [lr], #4
        bne     0b
        sub     r2, r2, #0xc0000001
        lsl     r2, r2, #2
        add     r5, r5, r2
        add     r6, r6, r2
1:      str     r6, [r0]
        str     r5, [r1]
        pop     {r4, r5, r6, pc}

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  ULONG  _tx_misra_timer_pointer_dif(TX_TIMER_INTERNAL **ptr1,         */
@/**                                           TX_TIMER_INTERNAL **ptr2);  */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_timer_pointer_dif:
        sub     r0, r0, r1
        asr     r0, r0, #2
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  TX_TIMER_INTERNAL **_tx_misra_timer_pointer_add(TX_TIMER_INTERNAL    */
@/**                                                  **ptr1, ULONG size); */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_timer_pointer_add:
        add     r0, r0, r1, lsl #2
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  VOID  _tx_misra_user_timer_pointer_get(TX_TIMER_INTERNAL             */
@/**                              *internal_timer, TX_TIMER **user_timer); */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_user_timer_pointer_get:
        sub     r0, r0, #8
        str     r0, [r1]
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  VOID  _tx_misra_thread_stack_check(TX_THREAD *thread_ptr,            */
@/**                                              VOID **highest_stack);   */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_thread_stack_check:
        push    {r4, r5, r6, lr}
        mov     r4, r0
        mov     r5, r1
        bl      _tx_thread_smp_protect
        cmp     r4, #0
        beq     0f
        ldr     r2, [r4]
        movw    r3, #0x5244
        movt    r3, #0x5448
        cmp     r2, r3
        beq     1f
0:      pop     {r4, r5, r6, lr}
        b       _tx_thread_smp_unprotect
1:      ldr     r3, [r4, #8]
        ldr     r2, [r5]
        cmp     r3, r2
        strcc   r3, [r5]
        movw    r3, #0xefef
        movt    r3, #0xefef
        ldr     r1, [r4, #12]
        ldr     r2, [r1]
        cmp     r2, r3
        beq     4f
2:      bl      _tx_thread_smp_unprotect
        mov     r0, r4
        bl      _tx_thread_stack_error_handler
        bl      _tx_thread_smp_protect
        ldr     r3, [r5]
3:      ldr     r2, [r3, #-4]
        movw    r3, #0xefef
        movt    r3, #0xefef
        cmp     r2, r3
        beq     0b
        bl      _tx_thread_smp_unprotect
        mov     r0, r4
        bl      _tx_thread_stack_analyze
        bl      _tx_thread_smp_protect
        pop     {r4, r5, r6, lr}
        b       _tx_thread_smp_unprotect
4:      ldr     r3, [r4, #16]
        ldr     r3, [r3, #1]
        cmp     r3, r2
        bne     2b
        ldr     r3, [r5]
        cmp     r1, r3
        bls     3b
        b       2b

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  UINT  _tx_misra_always_true(void);                                   */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_always_true:
        mov     r0, #1
        bx      lr

@/******************************************************************************************/
@/******************************************************************************************/
@/**                                                                                       */
@/**  UCHAR  **_tx_misra_indirect_void_to_uchar_pointer_convert(VOID **return_ptr);        */
@/**                                                                                       */
@/******************************************************************************************/
@/******************************************************************************************/
_tx_misra_indirect_void_to_uchar_pointer_convert:
        bx      lr

@/***************************************************************************************/
@/***************************************************************************************/
@/**                                                                                    */
@/**  UCHAR  **_tx_misra_uchar_to_indirect_uchar_pointer_convert(UCHAR *pointer);       */
@/**                                                                                    */
@/***************************************************************************************/
@/***************************************************************************************/
_tx_misra_uchar_to_indirect_uchar_pointer_convert:
        bx      lr

@/***********************************************************************************/
@/***********************************************************************************/
@/**                                                                                */
@/**  UCHAR  *_tx_misra_block_pool_to_uchar_pointer_convert(TX_BLOCK_POOL *pool);   */
@/**                                                                                */
@/***********************************************************************************/
@/***********************************************************************************/
_tx_misra_block_pool_to_uchar_pointer_convert:
        bx      lr

@/******************************************************************************************/
@/******************************************************************************************/
@/**                                                                                       */
@/**  TX_BLOCK_POOL  *_tx_misra_void_to_block_pool_pointer_convert(VOID *pointer);         */
@/**                                                                                       */
@/******************************************************************************************/
@/******************************************************************************************/
_tx_misra_void_to_block_pool_pointer_convert:
        bx      lr

@/*****************************************************************************/
@/*****************************************************************************/
@/**                                                                          */
@/**  UCHAR  *_tx_misra_void_to_uchar_pointer_convert(VOID *pointer);         */
@/**                                                                          */
@/*****************************************************************************/
@/*****************************************************************************/
_tx_misra_void_to_uchar_pointer_convert:
        bx      lr

@/************************************************************************************/
@/************************************************************************************/
@/**                                                                                 */
@/**  TX_BLOCK_POOL *_tx_misra_uchar_to_block_pool_pointer_convert(UCHAR *pointer);  */
@/**                                                                                 */
@/************************************************************************************/
@/************************************************************************************/
_tx_misra_uchar_to_block_pool_pointer_convert:
        bx      lr

@/**************************************************************************************/
@/**************************************************************************************/
@/**                                                                                   */
@/**  UCHAR  **_tx_misra_void_to_indirect_uchar_pointer_convert(VOID *pointer);        */
@/**                                                                                   */
@/**************************************************************************************/
@/**************************************************************************************/
_tx_misra_void_to_indirect_uchar_pointer_convert:
        bx      lr

@/*****************************************************************************************/
@/*****************************************************************************************/
@/**                                                                                      */
@/**  TX_BYTE_POOL  *_tx_misra_void_to_byte_pool_pointer_convert(VOID *pointer);          */
@/**                                                                                      */
@/*****************************************************************************************/
@/*****************************************************************************************/
_tx_misra_void_to_byte_pool_pointer_convert:
        bx      lr

@/***************************************************************************************/
@/***************************************************************************************/
@/**                                                                                    */
@/**  UCHAR  *_tx_misra_byte_pool_to_uchar_pointer_convert(TX_BYTE_POOL *pool);         */
@/**                                                                                    */
@/***************************************************************************************/
@/***************************************************************************************/
_tx_misra_byte_pool_to_uchar_pointer_convert:
        bx      lr

@/*****************************************************************************************/
@/*****************************************************************************************/
@/**                                                                                      */
@/**  ALIGN_TYPE  *_tx_misra_uchar_to_align_type_pointer_convert(UCHAR *pointer);         */
@/**                                                                                      */
@/*****************************************************************************************/
@/*****************************************************************************************/
_tx_misra_uchar_to_align_type_pointer_convert:
        bx      lr

@/****************************************************************************************************/
@/****************************************************************************************************/
@/**                                                                                                 */
@/**  TX_BYTE_POOL  **_tx_misra_uchar_to_indirect_byte_pool_pointer_convert(UCHAR *pointer);         */
@/**                                                                                                 */
@/****************************************************************************************************/
@/****************************************************************************************************/
_tx_misra_uchar_to_indirect_byte_pool_pointer_convert:
        bx      lr

@/**************************************************************************************************/
@/**************************************************************************************************/
@/**                                                                                               */
@/**  TX_EVENT_FLAGS_GROUP  *_tx_misra_void_to_event_flags_pointer_convert(VOID *pointer);         */
@/**                                                                                               */
@/**************************************************************************************************/
@/**************************************************************************************************/
_tx_misra_void_to_event_flags_pointer_convert:
        bx      lr

@/*****************************************************************************/
@/*****************************************************************************/
@/**                                                                          */
@/**  ULONG  *_tx_misra_void_to_ulong_pointer_convert(VOID *pointer);         */
@/**                                                                          */
@/*****************************************************************************/
@/*****************************************************************************/
_tx_misra_void_to_ulong_pointer_convert:
        bx      lr

@/********************************************************************************/
@/********************************************************************************/
@/**                                                                             */
@/**  TX_MUTEX  *_tx_misra_void_to_mutex_pointer_convert(VOID *pointer);         */
@/**                                                                             */
@/********************************************************************************/
@/********************************************************************************/
_tx_misra_void_to_mutex_pointer_convert:
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  UINT  _tx_misra_status_get(UINT status);                             */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_status_get:
        mov     r0, #0
        bx      lr

@/********************************************************************************/
@/********************************************************************************/
@/**                                                                             */
@/**  TX_QUEUE  *_tx_misra_void_to_queue_pointer_convert(VOID *pointer);         */
@/**                                                                             */
@/********************************************************************************/
@/********************************************************************************/
_tx_misra_void_to_queue_pointer_convert:
        bx      lr

@/****************************************************************************************/
@/****************************************************************************************/
@/**                                                                                     */
@/**  TX_SEMAPHORE  *_tx_misra_void_to_semaphore_pointer_convert(VOID *pointer);         */
@/**                                                                                     */
@/****************************************************************************************/
@/****************************************************************************************/
_tx_misra_void_to_semaphore_pointer_convert:
        bx      lr

@/**************************************************************************/
@/**************************************************************************/
@/**                                                                       */
@/**  VOID  *_tx_misra_uchar_to_void_pointer_convert(UCHAR *pointer);      */
@/**                                                                       */
@/**************************************************************************/
@/**************************************************************************/
_tx_misra_uchar_to_void_pointer_convert:
        bx      lr

@/*********************************************************************************/
@/*********************************************************************************/
@/**                                                                              */
@/**  TX_THREAD  *_tx_misra_ulong_to_thread_pointer_convert(ULONG value);         */
@/**                                                                              */
@/*********************************************************************************/
@/*********************************************************************************/
_tx_misra_ulong_to_thread_pointer_convert:
        bx      lr

@/***************************************************************************************************/
@/***************************************************************************************************/
@/**                                                                                                */
@/**  VOID  *_tx_misra_timer_indirect_to_void_pointer_convert(TX_TIMER_INTERNAL **pointer);         */
@/**                                                                                                */
@/***************************************************************************************************/
@/***************************************************************************************************/
_tx_misra_timer_indirect_to_void_pointer_convert:
        bx      lr

@/***************************************************************************************/
@/***************************************************************************************/
@/**                                                                                    */
@/**  CHAR  *_tx_misra_const_char_to_char_pointer_convert(const char *pointer);         */
@/**                                                                                    */
@/***************************************************************************************/
@/***************************************************************************************/
_tx_misra_const_char_to_char_pointer_convert:
        bx      lr

@/**********************************************************************************/
@/**********************************************************************************/
@/**                                                                               */
@/**  TX_THREAD  *_tx_misra_void_to_thread_pointer_convert(void *pointer);         */
@/**                                                                               */
@/**********************************************************************************/
@/**********************************************************************************/
_tx_misra_void_to_thread_pointer_convert:
        bx      lr

@/***********************************************************************************************/
@/***********************************************************************************************/
@/**                                                                                            */
@/**  UCHAR  *_tx_misra_char_to_uchar_pointer_convert(CHAR *pointer);                           */
@/**                                                                                            */
@/***********************************************************************************************/
@/***********************************************************************************************/
_tx_misra_char_to_uchar_pointer_convert:
        bx      lr
